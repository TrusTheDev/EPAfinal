Subalgoritmo NuevoSocioBiblioteca (E: contsocio, S: nombre, apellido, codigodesocio, ocupacion, correo, edad, contsocio)
Inicio
    mostrar("Ingrese nombre del socio: ")
    ingresar(nombre)
    mostrar("Ingrese apellido del socio: ")
    ingresar(apellido)
    mostrar("Ingrese edad del socio: ")
    ingresar(edad)
    mostrar("Ingrese ocupacion del socio: ")
    ingresar(ocupacion)
    mostrar("Ingrese correo del socio: ")
    ingresar(correo)
    
    // Llamada al subalgoritmo para generar el codigodesocio
    CodigoDeSocio(nombre, apellido, codigodesocio, contsocio)
    
    // llamado al subalgoritmo para verificacion de correo
    VerificacionDeCorreo(correo, verificaion)

    // Mostrar los datos ingresados
    mostrar("Datos del nuevo socio:")
    mostrar("Nombre: ", nombre)
    mostrar("Apellido: ", apellido)
    mostrar("Edad: ", edad)
    mostrar("Ocupacion: ", ocupacion)
    mostrar("Correo: ", correo)
    mostrar("Codigo de Socio: ", codigodesocio)
Fin

Subalgoritmo CodigoDeSocio(E:nombre,apellido:cadena;S:codigodesocio:cadena, contsocio: entero)   
Var
    nombre, apellido, codnom, codapell, codigodesocio: cadena
    i, cantsocios, secuencial: entero
Inicio
    codnom <-- ""
    codapell <-- ""
    tope <-- long(nombre)
// genera el codigo del nombre
    desde (i <-- 1) hasta (tope) hacer
        letra <-- nombre[i]
        segun ord(letra) hacer
            65.. 90: mostrar("nombre verificado")
            97.. 122: mostrar("ingrese su nombre en mayusculas")
        fin segun
    fin desde
    i <-- 1
    tope <-- 3
    desde i hasta tope hacer
        codnom <-- concatenar(codnom,nombre[i])
    fin desde
// gnenera el codigo del apellido
    tope <-- long(apellido)
    desde (i <-- 1) hasta (tope) hacer
        letra <-- nombre[i]
        segun ord(letra) hacer
            65.. 90: mostrar("apellido verificado")
            97.. 122: mostrar("ingrese su apellido en mayusculas")
        fin segun
    fin desde
    i <-- 1
    tope <-- 3
    desde i hasta tope hacer
        codnom <-- concatenar(codnom,apellido[i])
    fin desde
// genera un munero secuencial del socio
    contsocio <-- contsocio + 1
    secuencial <-- enteroacadena(contsocio)
    segun (secuencial) hacer
        0.. 9: secuencial <-- concatenar("000", secuencial)
        10.. 99: secuencial <-- concatenar("00", secuencial)
        100.. 999: secuencial <-- concatenar("0", secuencial)
        1000.. 9999: secuencial <-- secuencial
    fin segun     
// genero el codigo del socio
    codigodesocio <-- concatenar(codnom,car(45), codapell,car(45),secuencial)
    mostrar("El codigo del socio es: ",codigodesocio)
Fin

Subalgoritmo VerificacionDeCorreo (E: correo: cadena; S: verificacion: booleana)
Var
    verificacion: booleana
    i, cantidaddearroba, punto, arroba: entero
Inicio
    cantidaddearroba <-- 0
    arroba <-- 0
    punto-- 0 
    desde [i <-- 1] hasta [i <-- long(correo)] hacer
        si (correo[i] = "@") entonces
            cantidaddearroba < cantidaddearroba + 1
            punto <-- i + 1
            arroba <-- i
        fin si
    fin desde
    si (cantidaddearroba = 1) entonces
        si (punto > arroba) entonces
            verificacion <-- verdadero
            sino
            verificacion <-- falso
            fin sino
        fin si
    fin si
Fin