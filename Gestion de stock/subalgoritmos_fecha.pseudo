/*--------------------------------------------------------------------------------*/
Subalgoritmo enteroEnRango (E msg: cadena; E tope1, tope2: entero; S valor: entero)
// valida que valor esté entre el tope1 inferior y tope2 superior //
Inicio
   repetir
       mostrar (msg)
       ingresar (valor)
    hasta valor en [tope1..tope2]
Fin


/*--------------------------------------------------------------------------------*/
SUBALGORITMO obtenerFechaEntero(E dia, mes, anio: entero)
// Validar que el usuario ingrese 3 números para formar una fecha válida//
Var
   esBisiesto: logico
   topeDia: entero
Inicio
   enteroEnRango ("Ingrese el año actual", 2010, 2050, anio)


   esBisiesto <-- (anio mod 4 = 0) y ((anio mod 100 <> 0) o (anio mod 400 = 0))


   enteroEnRango ("Ingrese el mes actual", 1, 12, mes)


   si mes en [1,3,5,7,8,10,12] entonces
       topeDia <-- 31
   sino
       si mes en [4,6,9,11] entonces
           topeDia <-- 30
       sino
           si esBisiesto entonces
               topeDia <-- 29
           sino
               topeDia <-- 28
           fin si
       fin si
   fin si


   enteroEnRango ("Ingrese el día actual", 1, topeDia, dia)
Fin
/*--------------------------------------------------------------------------------*/
SUBALGORITMO obtenerFechaCadena(E d, m, a: entero; S fecha: cadena)
// Convierte día, mes y año en cadena con formato DD/MM/AAAA //
Inicio
   fecha <-- concatenar(enteroACadena(d), "/")
   fecha <-- concatenar(fecha, enteroACadena(m))
   fecha <-- concatenar(fecha, enteroAcadena(a))